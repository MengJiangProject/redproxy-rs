events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Custom log format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        root /usr/share/nginx/html;
        index index.html;
        
        # Default location
        location / {
            try_files $uri $uri/ =404;
            
            # Add custom headers for testing
            add_header X-Test-Server "nginx-target" always;
            add_header X-Server-Port "80" always;
        }
        
        # API endpoint for testing
        location /api/status {
            return 200 '{"status":"running","server":"nginx-target","port":80,"timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
            add_header X-Test-Server "nginx-target" always;
        }
        
        # Client info endpoint - returns connecting client IP
        location /api/client-info {
            return 200 '{"client_ip":"$remote_addr","server":"nginx-target","port":80,"timestamp":"$time_iso8601","user_agent":"$http_user_agent"}';
            add_header Content-Type application/json;
            add_header X-Test-Server "nginx-target" always;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "OK";
            add_header Content-Type text/plain;
        }
        
        # Large file endpoint for testing
        location /large {
            return 200 "This is a test response that is larger than usual to test buffer handling and data transfer efficiency through the proxy chain. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.";
            add_header Content-Type text/plain;
        }
    }
    
    # Additional server for testing multi-port scenarios
    server {
        listen 8080;
        server_name _;
        
        location / {
            return 200 '{"server":"nginx-8080","message":"Hello from port 8080"}';
            add_header Content-Type application/json;
            add_header X-Test-Server "nginx-8080" always;
        }
    }
}